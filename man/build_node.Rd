% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ddi_node.R
\name{build_branch_node}
\alias{build_branch_node}
\alias{build_leaf_node}
\alias{simple_leaf_node}
\title{Create DDI nodes}
\usage{
build_branch_node(tagname, allowed_children = NULL,
  required_children = NULL, root = FALSE, content = NULL,
  attribs = NULL, components = NULL)

build_leaf_node(tagname, content = NULL, attribs = NULL,
  components = NULL)

simple_leaf_node(tagname)
}
\arguments{
\item{tagname}{The name for the XML representation of this node}

\item{allowed_children}{A character vector of allowed children's tag names. Defaults to \code{NULL}, indicating any child is allowed.}

\item{required_children}{A character vector of required children's tag names. Default to \code{NULL}, indicating no children are strictly required.}

\item{root}{An indicator whether this node is the document root. Should really be reserved for \code{ddi_codeBook()}}

\item{content}{For a branch node, a list of child nodes. For a leaf node, a single string. Defaults to \code{NULL}, indicating no content.}

\item{attribs}{A named list representing the XML attributes for this node}

\item{components}{A shorthand object to \code{attribs} and \code{content}. If both \code{attribs} and \code{content} are \code{NULL}, \code{components} -- a list with "attribs" and "content" as fields -- will be used instead.}
}
\value{
A \code{ddi_node} object
}
\description{
All \code{ddi_<tag>()} functions either create branch nodes or leaf nodes.
Branches must only contain other nodes, whereas leaves may only have
a single string for its content. All nodes may be empty, however.
If no checks on function paramenters are necessary for leaf nodes,
use \code{simple_lead_node()}.
}
